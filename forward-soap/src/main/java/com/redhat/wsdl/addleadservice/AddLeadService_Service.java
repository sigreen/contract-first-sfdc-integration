package com.redhat.wsdl.addleadservice;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 3.2.6
 * 2019-04-17T12:45:48.834-04:00
 * Generated source version: 3.2.6
 *
 */
@WebServiceClient(name = "AddLeadService",
                  wsdlLocation = "http://soap-endpoint-fuse-66c3b847-5d25-11e9-ad61-0a580a010007.apps.melbourne-c137.openshiftworkshop.com/ws/lead?wsdl",
                  targetNamespace = "http://redhat.com/wsdl/AddLeadService/")
public class AddLeadService_Service extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://redhat.com/wsdl/AddLeadService/", "AddLeadService");
    public final static QName SOAPOverHTTP = new QName("http://redhat.com/wsdl/AddLeadService/", "SOAPOverHTTP");
    static {
        URL url = null;
        try {
            url = new URL("http://soap-endpoint-fuse-66c3b847-5d25-11e9-ad61-0a580a010007.apps.melbourne-c137.openshiftworkshop.com/ws/lead?wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(AddLeadService_Service.class.getName())
                .log(java.util.logging.Level.INFO,
                     "Can not initialize the default wsdl from {0}", "http://soap-endpoint-fuse-66c3b847-5d25-11e9-ad61-0a580a010007.apps.melbourne-c137.openshiftworkshop.com/ws/lead?wsdl");
        }
        WSDL_LOCATION = url;
    }

    public AddLeadService_Service(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public AddLeadService_Service(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public AddLeadService_Service() {
        super(WSDL_LOCATION, SERVICE);
    }

    public AddLeadService_Service(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public AddLeadService_Service(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public AddLeadService_Service(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }




    /**
     *
     * @return
     *     returns AddLeadService
     */
    @WebEndpoint(name = "SOAPOverHTTP")
    public AddLeadService getSOAPOverHTTP() {
        return super.getPort(SOAPOverHTTP, AddLeadService.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns AddLeadService
     */
    @WebEndpoint(name = "SOAPOverHTTP")
    public AddLeadService getSOAPOverHTTP(WebServiceFeature... features) {
        return super.getPort(SOAPOverHTTP, AddLeadService.class, features);
    }

}
